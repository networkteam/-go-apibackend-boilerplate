// Code generated by construct, DO NOT EDIT.
package repository

import (
	uuid "github.com/gofrs/uuid"
	qrb "github.com/networkteam/qrb"
	builder "github.com/networkteam/qrb/builder"
	fn "github.com/networkteam/qrb/fn"

	domain "myvendor.mytld/myproject/backend/domain/model"
)

var organisation = struct {
	builder.Identer
	ID        builder.IdentExp
	Name      builder.IdentExp
	CreatedAt builder.IdentExp
	UpdatedAt builder.IdentExp
}{
	CreatedAt: qrb.N("organisations.created_at"),
	ID:        qrb.N("organisations.organisation_id"),
	Identer:   qrb.N("organisations"),
	Name:      qrb.N("organisations.name"),
	UpdatedAt: qrb.N("organisations.updated_at"),
}

var organisationSortFields = map[string]builder.IdentExp{
	"createdat": organisation.CreatedAt,
	"name":      organisation.Name,
	"updatedat": organisation.UpdatedAt,
}

type OrganisationChangeSet struct {
	ID   *uuid.UUID
	Name *string
}

func (c OrganisationChangeSet) toMap() map[string]interface{} {
	m := make(map[string]interface{})
	if c.ID != nil {
		m["organisation_id"] = *c.ID
	}
	if c.Name != nil {
		m["name"] = *c.Name
	}
	return m
}

func OrganisationToChangeSet(r domain.Organisation) (c OrganisationChangeSet) {
	if r.ID != uuid.Nil {
		c.ID = &r.ID
	}
	c.Name = &r.Name
	return
}

var organisationDefaultJson = fn.JsonBuildObject().
	Prop("ID", organisation.ID).
	Prop("Name", organisation.Name).
	Prop("CreatedAt", organisation.CreatedAt).
	Prop("UpdatedAt", organisation.UpdatedAt)
